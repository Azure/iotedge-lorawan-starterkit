<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Globalization" #>
<#@ import namespace="System.Linq" #>
// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

//------------------------------------------------------------------------------
// This code was generated by a tool.
// Changes to this file will be lost if the code is re-generated.
//------------------------------------------------------------------------------

namespace LoRaWan.NetworkServer
{
    using System;

    partial class JsonReader
    {<#
const int maxArity = 16;

var all = Enumerable.Range(1, maxArity)
                    .Select(n => n.ToString(CultureInfo.InvariantCulture))
                    .ToArray();

for (var c = 2; c < maxArity; c++) {
    var ns = all.Take(c);
    var ts = string.Join(", ", from n in ns select "T" + n);
    var vs = string.Join(", ", from n in ns select "v" + n);
#>

        public static IJsonReader<T>
            Object<<#= ts #>, T>(
                <#= string.Join(", ", from n in ns select "IJsonProperty<T" + n + "> property" + n) #>, Func<<#= ts #>, T> projector) =>
            Object(<#= string.Join(", ", from n in ns select "property" + n) #>,
                   <#= string.Join(", ", Enumerable.Repeat("NonProperty.Instance", maxArity - c)) #>,
                   (<#= vs #>, <#= string.Join(", ", Enumerable.Repeat("_", maxArity - c)) #>) =>
                projector(<#= vs #>));
<# } #>
    }
}
