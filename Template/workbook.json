{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "iotHubResourceId": {
      "type": "string",
      "metadata": {
        "description": "The id of IoT Hub instance to which the workbook will be associated"
      }
    },
    "appInsightsResourceId": {
      "type": "string",
      "metadata": {
        "description": "The id of Application Insights instance to which the workbook will be associated for fetching telemetry entries"
      }
    },
    "workbookDisplayName": {
      "type": "string",
      "defaultValue": "StarterKitWorkbook",
      "metadata": {
        "description": "The friendly name for the workbook that is used in the Gallery or Saved List. This name must be unique within a resource group."
      }
    },
    "workbookId": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "The unique guid for this workbook instance"
      }
    }
  },
  "variables": {
    "workbookSourceId": "[parameters('iotHubResourceId')]",
    "workbookType": "workbook",
    "workbookContent": {
      "version": "Notebook/1.0",
      "items": [
        {
          "type": 9,
          "content": {
            "version": "KqlParameterItem/1.0",
            "crossComponentResources": ["{resource}"],
            "parameters": [
              {
                "id": "31596d7b-c0a9-448f-b3cc-a3a906cb9d48",
                "version": "KqlParameterItem/1.0",
                "name": "resourceType",
                "type": 7,
                "isRequired": true,
                "isGlobal": true,
                "value": "Microsoft.Devices/IotHubs",
                "isHiddenWhenLocked": true,
                "typeSettings": {
                  "additionalResourceOptions": [],
                  "showDefault": false
                },
                "jsonData": "[[\"Microsoft.Devices/IotHubs\"]",
                "defaultValue": "value::1"
              },
              {
                "id": "bebd5be4-3d61-45ed-9f07-b9ae091e1ccb",
                "version": "KqlParameterItem/1.0",
                "name": "resource",
                "type": 5,
                "isRequired": true,
                "isHiddenWhenLocked": true,
                "typeSettings": {
                  "resourceTypeFilter": {
                    "microsoft.devices/iothubs": true
                  },
                  "additionalResourceOptions": ["value::1"],
                  "showDefault": false
                },
                "defaultValue": "value::1"
              },
              {
                "id": "d062cb40-2eed-4917-ab42-8f271db98312",
                "version": "KqlParameterItem/1.0",
                "name": "InsightsMetricsExists",
                "type": 1,
                "query": "let hasNonEmptyTable = (T:string) \n{ \n   toscalar( union isfuzzy=true ( table(T) | count as Count ), (print Count=0) | summarize sum(Count) ) > 0\n};\nlet TableName = 'InsightsMetrics';\nprint IsPresent=iif(hasNonEmptyTable(TableName), \"yes\", \"no\")",
                "crossComponentResources": ["{resource}"],
                "isHiddenWhenLocked": true,
                "timeContext": {
                  "durationMs": 259200000
                },
                "queryType": 0,
                "resourceType": "{resourceType}"
              },
              {
                "id": "36a641eb-587a-40c0-b491-b7b2f85eb0c0",
                "version": "KqlParameterItem/1.0",
                "name": "mainAction",
                "type": 1,
                "isGlobal": true,
                "value": "alerts",
                "isHiddenWhenLocked": true
              },
              {
                "id": "4ea30d03-74c2-4b08-bf00-f3c0a4c57f13",
                "version": "KqlParameterItem/1.0",
                "name": "alertResources",
                "type": 5,
                "isRequired": true,
                "multiSelect": true,
                "quote": "'",
                "delimiter": ",",
                "typeSettings": {
                  "resourceTypeFilter": {
                    "microsoft.devices/iothubs": true,
                    "microsoft.insights/components": true
                  },
                  "additionalResourceOptions": ["value::all"],
                  "showDefault": false
                },
                "defaultValue": "value::all"
              },
              {
                "id": "6f896f81-18dc-4307-98f3-77927af019af",
                "version": "KqlParameterItem/1.0",
                "name": "appInsightsResourceId",
                "type": 5,
                "isRequired": true,
                "multiSelect": true,
                "quote": "'",
                "delimiter": ",",
                "typeSettings": {
                  "resourceTypeFilter": {
                    "microsoft.insights/components": true
                  },
                  "additionalResourceOptions": ["value::all"]
                },
                "defaultValue": "value::all"
              }
            ],
            "style": "pills",
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          "conditionalVisibility": {
            "parameterName": "neverset",
            "comparison": "isNotEqualTo"
          },
          "name": "parameters - 5"
        },
        {
          "type": 9,
          "content": {
            "version": "KqlParameterItem/1.0",
            "crossComponentResources": ["{appInsightsResourceId}"],
            "parameters": [
              {
                "id": "1b4b2d2e-4f2e-4881-903d-f307d6958a1c",
                "version": "KqlParameterItem/1.0",
                "name": "timeRange",
                "label": "Time range",
                "type": 4,
                "isRequired": true,
                "isGlobal": true,
                "value": {
                  "durationMs": 14400000
                },
                "typeSettings": {
                  "selectableValues": [
                    {
                      "durationMs": 1800000
                    },
                    {
                      "durationMs": 3600000
                    },
                    {
                      "durationMs": 14400000
                    },
                    {
                      "durationMs": 43200000
                    },
                    {
                      "durationMs": 86400000
                    },
                    {
                      "durationMs": 172800000
                    },
                    {
                      "durationMs": 259200000
                    },
                    {
                      "durationMs": 604800000
                    },
                    {
                      "durationMs": 1209600000
                    },
                    {
                      "durationMs": 2592000000
                    }
                  ],
                  "allowCustom": true
                }
              }
            ],
            "style": "pills",
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          "customWidth": "30",
          "conditionalVisibility": {
            "parameterName": "InsightsMetricsExists",
            "comparison": "isEqualTo",
            "value": "yes"
          },
          "name": "Time Range"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "title": "Overview - Failure Indicators",
            "items": [
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let connectivityLost = customMetrics\r\n| where name == \"StationConnectivityLost\"\r\n| project name, valueSum\r\n| summarize Count = sum(valueSum) by name\r\n| take 1;\r\ncustomMetrics\r\n| where name == \"StationConnectivityLost\"\r\n| make-series Trend = avg(value) default = 0 on timestamp from {timeRange:start} to {timeRange:end} step {timeRange:grain} by name\r\n| join (connectivityLost) on name\r\n| project-away name, timestamp",
                  "size": 4,
                  "noDataMessage": "No connections lost",
                  "noDataMessageStyle": 3,
                  "timeContext": {
                    "durationMs": 14400000
                  },
                  "timeContextFromParameter": "timeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components",
                  "crossComponentResources": ["{appInsightsResourceId}"],
                  "visualization": "tiles",
                  "tileSettings": {
                    "titleContent": {
                      "columnMatch": "name1",
                      "formatter": 1
                    },
                    "leftContent": {
                      "columnMatch": "Count",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "hotCold"
                      },
                      "numberFormat": {
                        "unit": 17,
                        "options": {
                          "style": "decimal",
                          "maximumFractionDigits": 0,
                          "maximumSignificantDigits": 3
                        }
                      }
                    },
                    "secondaryContent": {
                      "columnMatch": "Trend",
                      "formatter": 9,
                      "formatOptions": {
                        "palette": "red"
                      }
                    },
                    "showBorder": false
                  }
                },
                "customWidth": "15",
                "name": "Station Connectivity Lost"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let receiveWindowMisses = customMetrics\r\n| where name == \"ReceiveWindowMisses\"\r\n| order by timestamp desc\r\n| project name, valueSum\r\n| summarize Sum = sum(valueSum) by name\r\n| take 1;\r\ncustomMetrics\r\n| where name == \"ReceiveWindowMisses\"\r\n| make-series Trend = sum(valueSum) default = 0 on timestamp from {timeRange:start} to {timeRange:end} step {timeRange:grain} by name\r\n| join (receiveWindowMisses) on name\r\n| project-away name, timestamp",
                  "size": 4,
                  "noDataMessage": "No receive windows missed",
                  "noDataMessageStyle": 3,
                  "timeContext": {
                    "durationMs": 14400000
                  },
                  "timeContextFromParameter": "timeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components",
                  "crossComponentResources": ["{appInsightsResourceId}"],
                  "visualization": "tiles",
                  "tileSettings": {
                    "titleContent": {
                      "columnMatch": "name1"
                    },
                    "leftContent": {
                      "columnMatch": "Sum",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "hotCold"
                      }
                    },
                    "secondaryContent": {
                      "columnMatch": "Trend",
                      "formatter": 9,
                      "formatOptions": {
                        "palette": "red"
                      }
                    },
                    "showBorder": false,
                    "size": "auto"
                  }
                },
                "customWidth": "15",
                "name": "Receive Windows"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let unhandledExceptions = customMetrics\r\n| where name == \"UnhandledExceptions\"\r\n| project name, valueSum, exceptionKeyword = \"Exception\"\r\n| summarize Count = sum(valueSum) by name, exceptionKeyword\r\n| take 1;\r\ncustomMetrics\r\n| where name == \"UnhandledExceptions\"\r\n| make-series Trend = avg(value) default = 0 on timestamp from {timeRange:start} to {timeRange:end} step {timeRange:grain} by name\r\n| join (unhandledExceptions) on name\r\n| project-away name, timestamp",
                  "size": 4,
                  "noDataMessage": "No unhandled exceptions detected",
                  "noDataMessageStyle": 3,
                  "timeContext": {
                    "durationMs": 14400000
                  },
                  "timeContextFromParameter": "timeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components",
                  "crossComponentResources": ["{appInsightsResourceId}"],
                  "visualization": "tiles",
                  "tileSettings": {
                    "titleContent": {
                      "columnMatch": "name1",
                      "formatter": 1,
                      "formatOptions": {
                        "linkColumn": "exceptionKeyword",
                        "linkTarget": "Search"
                      }
                    },
                    "leftContent": {
                      "columnMatch": "Count",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "hotCold"
                      },
                      "numberFormat": {
                        "unit": 17,
                        "options": {
                          "style": "decimal",
                          "maximumFractionDigits": 2,
                          "maximumSignificantDigits": 3
                        }
                      }
                    },
                    "secondaryContent": {
                      "columnMatch": "Trend",
                      "formatter": 9,
                      "formatOptions": {
                        "palette": "red"
                      }
                    },
                    "showBorder": false
                  }
                },
                "customWidth": "15",
                "name": "Unhandled Exceptions"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let c2dmessagesTooLong = customMetrics\r\n| where name == \"C2DMessageTooLong\"\r\n| project name, valueSum\r\n| summarize Count = sum(valueSum) by name\r\n| take 1;\r\ncustomMetrics\r\n| where name == \"C2DMessageTooLong\"\r\n| make-series Trend = avg(value) default = 0 on timestamp from {timeRange:start} to {timeRange:end} step {timeRange:grain} by name\r\n| join (c2dmessagesTooLong) on name\r\n| project-away name, timestamp",
                  "size": 4,
                  "noDataMessage": "No C2D messages that were too long detected",
                  "noDataMessageStyle": 3,
                  "timeContext": {
                    "durationMs": 14400000
                  },
                  "timeContextFromParameter": "timeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components",
                  "crossComponentResources": ["{appInsightsResourceId}"],
                  "visualization": "tiles",
                  "tileSettings": {
                    "titleContent": {
                      "columnMatch": "name1"
                    },
                    "leftContent": {
                      "columnMatch": "Sum",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "hotCold"
                      }
                    },
                    "secondaryContent": {
                      "columnMatch": "Trend",
                      "formatter": 9,
                      "formatOptions": {
                        "palette": "red"
                      }
                    },
                    "showBorder": false,
                    "size": "auto"
                  }
                },
                "customWidth": "15",
                "name": "C2DMessageTooLong"
              }
            ]
          },
          "name": "Overview - Failure Indicators"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "title": "Overview - Performance Indicators",
            "items": [
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let activeConnections = customMetrics\r\n| where name == \"ActiveStationConnections\"\r\n| order by timestamp desc\r\n| project value, name\r\n| take 1;\r\ncustomMetrics\r\n| where name == \"ActiveStationConnections\"\r\n| make-series Trend = avg(value) default = 0 on timestamp from {timeRange:start} to {timeRange:end} step {timeRange:grain} by name\r\n| join (activeConnections) on name\r\n| project-away name, timestamp\r\n\r\n\r\n",
                  "size": 4,
                  "timeContext": {
                    "durationMs": 14400000
                  },
                  "timeContextFromParameter": "timeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components",
                  "crossComponentResources": ["{appInsightsResourceId}"],
                  "visualization": "tiles",
                  "tileSettings": {
                    "titleContent": {
                      "columnMatch": "name1",
                      "formatter": 1
                    },
                    "leftContent": {
                      "columnMatch": "value",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "auto"
                      },
                      "numberFormat": {
                        "unit": 17,
                        "options": {
                          "style": "decimal",
                          "useGrouping": false,
                          "maximumFractionDigits": 0,
                          "maximumSignificantDigits": 3
                        }
                      }
                    },
                    "secondaryContent": {
                      "columnMatch": "Trend",
                      "formatter": 9,
                      "formatOptions": {
                        "palette": "blue"
                      }
                    },
                    "showBorder": false,
                    "size": "auto"
                  }
                },
                "customWidth": "15",
                "name": "Active Station Connections"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let deliveryLatency = customMetrics\r\n| where name == \"D2CMessageDeliveryLatency\"\r\n| order by timestamp desc\r\n| take 1;\r\ncustomMetrics\r\n| where name == \"D2CMessageDeliveryLatency\"\r\n| make-series Trend = avg(value) default = 0 on timestamp from {timeRange:start} to {timeRange:end} step {timeRange:grain} by name\r\n| join (deliveryLatency) on name\r\n| project-away name, timestamp",
                  "size": 4,
                  "timeContext": {
                    "durationMs": 14400000
                  },
                  "timeContextFromParameter": "timeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components",
                  "crossComponentResources": ["{appInsightsResourceId}"],
                  "visualization": "tiles",
                  "tileSettings": {
                    "titleContent": {
                      "columnMatch": "name1",
                      "formatter": 1
                    },
                    "leftContent": {
                      "columnMatch": "value",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "auto"
                      },
                      "numberFormat": {
                        "unit": 23,
                        "options": {
                          "style": "decimal",
                          "maximumFractionDigits": 2,
                          "maximumSignificantDigits": 3
                        }
                      }
                    },
                    "secondaryContent": {
                      "columnMatch": "Trend",
                      "formatter": 9,
                      "formatOptions": {
                        "palette": "blue"
                      }
                    },
                    "showBorder": false,
                    "size": "auto"
                  }
                },
                "customWidth": "15",
                "name": "Delivery Latenciees"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let joinRequests = customMetrics\r\n| where name == \"JoinRequests\"\r\n| order by timestamp desc\r\n| project name, valueSum\r\n| summarize JoinRequestSum = sum(valueSum) by name\r\n| take 1;\r\ncustomMetrics\r\n| where name == \"JoinRequests\"\r\n| make-series Trend = sum(valueSum) default = 0 on timestamp from {timeRange:start} to {timeRange:end} step {timeRange:grain} by name\r\n| join (joinRequests) on name\r\n| project-away name, timestamp",
                  "size": 4,
                  "timeContext": {
                    "durationMs": 14400000
                  },
                  "timeContextFromParameter": "timeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components",
                  "crossComponentResources": ["{appInsightsResourceId}"],
                  "visualization": "tiles",
                  "tileSettings": {
                    "titleContent": {
                      "columnMatch": "name1",
                      "formatter": 1
                    },
                    "leftContent": {
                      "columnMatch": "JoinRequestSum",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "auto"
                      },
                      "numberFormat": {
                        "unit": 17,
                        "options": {
                          "style": "decimal",
                          "maximumFractionDigits": 2,
                          "maximumSignificantDigits": 3
                        }
                      }
                    },
                    "secondaryContent": {
                      "columnMatch": "Trend",
                      "formatter": 9,
                      "formatOptions": {
                        "palette": "blue"
                      }
                    },
                    "showBorder": false,
                    "size": "auto"
                  }
                },
                "customWidth": "15",
                "name": "query - 3"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let messageSizes = customMetrics\r\n| where name == \"D2CMessageSize\"\r\n| order by timestamp desc\r\n| summarize D2CMessageSize = avg(value) by name;\r\ncustomMetrics\r\n| where name == \"D2CMessageSize\"\r\n| make-series Hist = sum(valueSum) default = 0 on value from 5.0 to 250.0 step 5.0 by name\r\n| join (messageSizes) on name",
                  "size": 4,
                  "timeContext": {
                    "durationMs": 14400000
                  },
                  "timeContextFromParameter": "timeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components",
                  "crossComponentResources": ["{appInsightsResourceId}"],
                  "visualization": "tiles",
                  "tileSettings": {
                    "titleContent": {
                      "columnMatch": "name1",
                      "formatter": 1
                    },
                    "leftContent": {
                      "columnMatch": "D2CMessageSize",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "auto"
                      },
                      "numberFormat": {
                        "unit": 2,
                        "options": {
                          "style": "decimal",
                          "maximumFractionDigits": 2,
                          "maximumSignificantDigits": 3
                        }
                      }
                    },
                    "secondaryContent": {
                      "columnMatch": "Hist",
                      "formatter": 10,
                      "formatOptions": {
                        "palette": "blue"
                      }
                    },
                    "showBorder": false,
                    "size": "auto"
                  }
                },
                "customWidth": "15",
                "name": "query - 4"
              },
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let sum = customMetrics\r\n| where name == \"D2CMessagesReceived\"\r\n| order by timestamp desc\r\n| project name, valueSum\r\n| summarize Sum = sum(valueSum) by name\r\n| take 1;\r\ncustomMetrics\r\n| where name == \"D2CMessagesReceived\"\r\n| make-series Trend = sum(valueSum) default = 0 on timestamp from {timeRange:start} to {timeRange:end} step {timeRange:grain} by name\r\n| join (sum) on name\r\n| project-away name, timestamp",
                  "size": 4,
                  "timeContext": {
                    "durationMs": 14400000
                  },
                  "timeContextFromParameter": "timeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components",
                  "crossComponentResources": ["{appInsightsResourceId}"],
                  "visualization": "tiles",
                  "tileSettings": {
                    "titleContent": {
                      "columnMatch": "name1",
                      "formatter": 1
                    },
                    "leftContent": {
                      "columnMatch": "Sum",
                      "formatter": 12,
                      "formatOptions": {
                        "palette": "auto"
                      },
                      "numberFormat": {
                        "unit": 17,
                        "options": {
                          "style": "decimal",
                          "maximumFractionDigits": 2,
                          "maximumSignificantDigits": 3
                        }
                      }
                    },
                    "secondaryContent": {
                      "columnMatch": "Trend",
                      "formatter": 10,
                      "formatOptions": {
                        "palette": "blue"
                      }
                    },
                    "showBorder": false
                  }
                },
                "customWidth": "15",
                "name": "D2CMessagesReceived"
              }
            ]
          },
          "name": "Overview - Performance Indicators"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "title": "Dependencies",
            "items": [
              {
                "type": 3,
                "content": {
                  "version": "KqlItem/1.0",
                  "query": "let rawData = dependencies\r\n| project duration, name, type, timestamp, EndpointWithoutDeviceId = extract(\"(.*)/[0-9a-zA-Z]{16}$\", 1, name)\r\n| project duration, type, timestamp, Endpoint = iff(isempty(EndpointWithoutDeviceId), name, EndpointWithoutDeviceId);\r\nlet history = rawData\r\n| make-series avg(duration) default=0 on timestamp from {timeRange:start} to {timeRange:end} step {timeRange:grain} by Endpoint\r\n| project-away timestamp;\r\nrawData\r\n| summarize Mean = avg(duration), (p95) = percentiles(duration, 95), Requests = count() by type, Endpoint\r\n| join (history) on Endpoint\r\n| order by Requests desc",
                  "size": 3,
                  "timeContext": {
                    "durationMs": 14400000
                  },
                  "timeContextFromParameter": "timeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.insights/components",
                  "crossComponentResources": ["{appInsightsResourceId}"],
                  "gridSettings": {
                    "formatters": [
                      {
                        "columnMatch": "Mean",
                        "formatter": 0,
                        "numberFormat": {
                          "unit": 23,
                          "options": {
                            "style": "decimal",
                            "minimumSignificantDigits": 3,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      {
                        "columnMatch": "p95",
                        "formatter": 0,
                        "numberFormat": {
                          "unit": 23,
                          "options": {
                            "style": "decimal",
                            "minimumSignificantDigits": 3,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      {
                        "columnMatch": "Requests",
                        "formatter": 0,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      {
                        "columnMatch": "Endpoint1",
                        "formatter": 5
                      },
                      {
                        "columnMatch": "avg_duration",
                        "formatter": 10,
                        "formatOptions": {
                          "palette": "blue"
                        },
                        "numberFormat": {
                          "unit": 23,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      {
                        "columnMatch": "Median",
                        "formatter": 0,
                        "numberFormat": {
                          "unit": 23,
                          "options": {
                            "style": "decimal",
                            "minimumSignificantDigits": 3,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      {
                        "columnMatch": "p80",
                        "formatter": 0,
                        "numberFormat": {
                          "unit": 23,
                          "options": {
                            "style": "decimal",
                            "minimumSignificantDigits": 3,
                            "maximumSignificantDigits": 3
                          }
                        }
                      }
                    ],
                    "labelSettings": [
                      {
                        "columnId": "type",
                        "label": "Type"
                      },
                      {
                        "columnId": "avg_duration",
                        "label": "Average Duration (history)"
                      }
                    ]
                  }
                },
                "name": "Dependency durations"
              }
            ]
          },
          "name": "Dependencies"
        },
        {
          "type": 12,
          "content": {
            "version": "NotebookGroup/1.0",
            "groupType": "editable",
            "title": "Fleet Overview",
            "items": [
              {
                "type": 11,
                "content": {
                  "version": "LinkItem/1.0",
                  "style": "tabs",
                  "links": [
                    {
                      "id": "9ba0a0e8-584b-421a-85e6-96c89eda5a17",
                      "cellValue": "mainAction",
                      "linkTarget": "parameter",
                      "linkLabel": "Devices",
                      "subTarget": "devicelist",
                      "style": "link"
                    },
                    {
                      "id": "3b8d77da-20d0-499a-b62d-25f5c6a88a55",
                      "cellValue": "mainAction",
                      "linkTarget": "parameter",
                      "linkLabel": "Alerts",
                      "subTarget": "alerts",
                      "style": "link"
                    }
                  ]
                },
                "customWidth": "25",
                "conditionalVisibility": {
                  "parameterName": "InsightsMetricsExists",
                  "comparison": "isEqualTo",
                  "value": "yes"
                },
                "name": "links - 8 - Copy"
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "items": [
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "// Set thresholds\nlet hostMemPercentThreshold = 80;\nlet hostCpuPercentThreshold = 80;\nlet hostDiskPercentThreshold = 90;\nlet localMessagesSentThreshold = 0;\nlet upstreamMessagesSentThreshold = 0;\nlet qlenThreshold = 100;\nlet noDataPanicThreshold1Minutes = 30;\nlet noDataPanicThreshold2Minutes = 120;\nlet timeBin = 5m; // set to how often the devices send data\nlet startTime = {timeRange:start};\nlet endTime =  {timeRange:end};\n//query\nlet cpu_percent = InsightsMetrics\n    | where TimeGenerated > startTime and TimeGenerated < endTime\n    | where Name == \"edgeAgent_used_cpu_percent\" and Tags contains \"host\" and Tags contains \"0.99\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | extend value = toint(Val)\n    | top-nested of device by Ignore0=max(1),\n    top-nested 3 of TimeGenerated by Ignore1=max(TimeGenerated),\n    top-nested of value by Ignore2=max(1)\n    | project-away Ignore*\n    | summarize p95HostCpu=max(value) by device;\nlet totalMemByDevice = InsightsMetrics\n    | where TimeGenerated > startTime and TimeGenerated < endTime\n    | where Name == \"edgeAgent_total_memory_bytes\" and Tags contains \"host\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | extend value = tolong(Val)\n    | project device, value, TimeGenerated\n    | top-nested of device by Ignore0=max(1),\n    top-nested 3 of TimeGenerated by Ignore1=max(TimeGenerated),\n    top-nested of value by Ignore2=max(1)\n    | project-away Ignore*\n    | summarize total_bytes=max(value) by device;\nlet memUsedPercent = InsightsMetrics\n    | where TimeGenerated > startTime and TimeGenerated < endTime\n    | where Name == \"edgeAgent_used_memory_bytes\" and Tags contains \"host\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | top-nested of device by Ignore0=max(1),\n    top-nested 3 of TimeGenerated by Ignore1=max(TimeGenerated),\n    top-nested of Val by Ignore2=max(1)\n    | project-away Ignore*\n    | extend used_bytes = tolong(Val) \n    | project device, used_bytes, TimeGenerated\n    | join kind=leftouter totalMemByDevice on $left.device == $right.device\n    | extend mem_used_percent = (todouble(used_bytes) / todouble(total_bytes)) * 100\n    | extend mem_used_percent = round(mem_used_percent, 0)\n    | summarize p95HostMem=max(mem_used_percent) by device;\nlet cpu_and_mem = memUsedPercent\n    | join cpu_percent on $left.device == $right.device\n    | project-away device1;\nlet totalBytesByDevice = InsightsMetrics\n    | where TimeGenerated > startTime and TimeGenerated < endTime\n    | where Name == \"edgeAgent_total_disk_space_bytes\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | extend value = tolong(Val)\n    | extend diskname = tostring(dimensions.disk_name)\n    | extend diskfs = tostring(dimensions.disk_filesystem)\n    | where diskfs != \"overlay\"\n    | top-nested of device by Ignore0=max(1),\n    top-nested 3 of TimeGenerated by Ignore1=max(TimeGenerated),\n    top-nested of value by Ignore2=max(1),\n    top-nested of diskname by Ignore3=max(1)\n    | project-away Ignore*\n    | project device, diskname, value, TimeGenerated\n    | summarize Bytes=max(value) by device, diskname\n    | summarize totalBytes=sum(Bytes) by device;\nlet used_disk_trend = InsightsMetrics\n    | where TimeGenerated > startTime and TimeGenerated < endTime\n    | where Name == \"edgeAgent_available_disk_space_bytes\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | extend value = tolong(Val)\n    | extend diskname = tostring(dimensions.disk_name)\n    | extend diskfs = tostring(dimensions.disk_filesystem)\n    | where diskfs != \"overlay\"\n    | top-nested of device by Ignore0=max(1),\n    top-nested 3 of TimeGenerated by Ignore1=max(TimeGenerated),\n    top-nested of value by Ignore2=max(1),\n    top-nested of diskname by Ignore3=max(1)\n    | project-away Ignore*\n    | project device, diskname, value, TimeGenerated\n    | summarize Bytes=max(value) by device, diskname, TimeGenerated\n    | summarize availBytes=sum(Bytes) by device, TimeGenerated\n    | join kind=leftouter\n        totalBytesByDevice\n        on $left.device == $right.device\n    | extend percentUsed = round((todouble(totalBytes) - todouble(availBytes)) / todouble(totalBytes) * 100, 0)\n    | project TimeGenerated, device, percentUsed\n    | summarize p95Disk=max(percentUsed) by device;\nlet cpu_mem_disk = cpu_and_mem\n    | join\n        used_disk_trend\n        on $left.device == $right.device\n    | project-away device1;\nlet p95QlenByDevice = InsightsMetrics\n    | where TimeGenerated > startTime\n    | where TimeGenerated < endTime\n    | where Name == \"edgehub_queue_length\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | extend ep = tostring(dimensions.endpoint)\n    | extend qlen = toint(Val)\n    | top-nested of device by Ignore0=max(1),\n    top-nested 3 of TimeGenerated by Ignore1=max(TimeGenerated),\n    top-nested of qlen by Ignore2=max(1),\n    top-nested of ep by Ignore3=max(1)\n    | project-away Ignore*\n    | project device, qlen, ep, TimeGenerated\n    | summarize sum(qlen) by TimeGenerated, device\n    | summarize p95QLen = max(sum_qlen) by device;\nlet lastUpdateTimeByDevice = InsightsMetrics\n    | where TimeGenerated > startTime\n    | where TimeGenerated < endTime\n    | where Name == \"edgehub_gettwin_total\" or Name == \"edgeAgent_total_time_running_correctly_seconds\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | project TimeGenerated, device\n    | summarize lastUpdateTime=max(TimeGenerated) by device;\nlet p95QlenByDeviceAndLastUpdate = p95QlenByDevice \n    | join kind=rightouter lastUpdateTimeByDevice on device\n    | extend device=device1\n    | project-away device1\n    | extend lastUpdatedSeconds = tolong(datetime_diff('second', now(), lastUpdateTime))\n    | extend lastUpdatedMins = tolong(datetime_diff('minute', now(), lastUpdateTime))\n    | extend lastUpdatedHours = tolong(datetime_diff('hour', now(), lastUpdateTime))\n    | extend lastUpdatedDays = tolong(datetime_diff('day', now(), lastUpdateTime))\n    | extend agoText = case(lastUpdatedSeconds <= 60, strcat(\"seen \", lastUpdatedSeconds, iff(lastUpdatedSeconds == 1, \" sec ago\", \" secs ago\")),\n        lastUpdatedSeconds <= 3600, strcat(\"seen \", lastUpdatedMins, iff(lastUpdatedMins == 1, \" min ago\", \" mins ago\")), \n        lastUpdatedSeconds <= 86400, strcat(\"seen \", lastUpdatedHours, iff(lastUpdatedHours == 1, \" hr ago\", \" hrs ago\")),\n        strcat(\"👀 \", lastUpdatedDays, iff(lastUpdatedDays > 1, \" days ago\", \" day ago\")))\n    | project agoText, device, p95QLen, lastUpdatedMins;\nlet qlenAndLastUpdate = p95QlenByDeviceAndLastUpdate\n    | join kind=leftouter\n        cpu_mem_disk\n        on $left.device == $right.device\n    | project-away device1;\n// Local and upstream messages\nlet recentUpstreamMessageCount = InsightsMetrics\n    | where TimeGenerated > startTime and TimeGenerated < endTime\n    | where Name == \"edgehub_messages_sent_total\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | extend target = trim_start(@\"[^/]+/\", extractjson(\"$.to\", tostring(dimensions), typeof(string)))\n    | where target contains \"Upstream\"\n    | extend source = strcat(device, \"::\", trim_start(@\"[^/]+/\", tostring(dimensions.from)))\n    | extend messages = toint(Val)\n    | extend sourceTarget = strcat(source, \"::\", target)\n    | project TimeGenerated, source, sourceTarget, messages, device\n    | top-nested of device by Ignore0=max(1),\n    top-nested 3 of TimeGenerated by Ignore1=max(TimeGenerated),\n    top-nested of messages by Ignore2=max(1),\n    top-nested of source by Ignore3=max(1),\n    top-nested of sourceTarget by Ignore4=max(1)\n    | project-away Ignore*\n    | order by device, source, sourceTarget, TimeGenerated\n    | serialize\n    | extend nextCount = next(messages, 1)\n    | extend nextSourceTarget= next(sourceTarget, 1)\n    | extend diff = iff((messages - nextCount) >= 0, messages - nextCount, 0)\n    | where sourceTarget == nextSourceTarget and diff >= 0\n    | summarize maxSourceTargetCount=max(diff) by sourceTarget, device\n    | summarize recentUpstreamMessages=sum(maxSourceTargetCount) by device;\nlet recentLocalMessageCount = InsightsMetrics\n    | where TimeGenerated > startTime and TimeGenerated < endTime\n    | where Name == \"edgehub_messages_sent_total\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | extend target = trim_start(@\"[^/]+/\", extractjson(\"$.to\", tostring(dimensions), typeof(string)))\n    | where target !contains \"Upstream\"\n    | extend source = strcat(device, \"::\", trim_start(@\"[^/]+/\", tostring(dimensions.from)))\n    | extend messages = toint(Val)\n    | extend sourceTarget = strcat(source, \"::\", target)\n    | project TimeGenerated, source, sourceTarget, messages, device\n    | top-nested of device by Ignore0=max(1),\n    top-nested 3 of TimeGenerated by Ignore1=max(TimeGenerated),\n    top-nested of messages by Ignore2=max(1),\n    top-nested of source by Ignore3=max(1),\n    top-nested of sourceTarget by Ignore4=max(1)\n    | project-away Ignore*\n    | order by device, source, sourceTarget, TimeGenerated\n    | serialize\n    | extend nextCount = next(messages, 1)\n    | extend nextSourceTarget= next(sourceTarget, 1)\n    | extend diff = iff((messages - nextCount) >= 0, messages - nextCount, 0)\n    | where sourceTarget == nextSourceTarget and diff >= 0\n    | summarize maxSourceTargetCount=max(diff) by sourceTarget, device\n    | summarize recentLocalMessages=sum(maxSourceTargetCount) by device;\nlet recentMessageCount = recentLocalMessageCount\n    | join kind=fullouter recentUpstreamMessageCount on device\n    | extend device=device1\n    | project-away device1;\n// Final join\nqlenAndLastUpdate\n| join kind=leftouter recentMessageCount on device\n| project-away device1\n| extend hostMemPercentThreshold = hostMemPercentThreshold\n| extend hostCpuPercentThreshold = hostCpuPercentThreshold\n| extend hostDiskPercentThreshold = hostDiskPercentThreshold\n| extend localMessagesSentThreshold = localMessagesSentThreshold\n| extend upstreamMessagesSentThreshold = upstreamMessagesSentThreshold\n| extend qlenThreshold = qlenThreshold\n| extend noDataPanicThreshold1Minutes = noDataPanicThreshold1Minutes\n| extend noDataPanicThreshold2Minutes = noDataPanicThreshold2Minutes\n| extend healthIndicator = iff((p95HostMem < hostMemPercentThreshold and \n    p95HostCpu < hostCpuPercentThreshold and\n    p95Disk < hostDiskPercentThreshold and\n    p95QLen < qlenThreshold), \n    iff(lastUpdatedMins < noDataPanicThreshold1Minutes,\n    0,\n    1),\n    2)\n| extend healthIndicator = iff(lastUpdatedMins > noDataPanicThreshold1Minutes,\n    1,\n    iff((isnull(p95HostMem) or p95HostMem < hostMemPercentThreshold) and \n    (isnull(p95HostCpu) or p95HostCpu < hostCpuPercentThreshold) and\n    (isnull(p95Disk) or p95Disk < hostDiskPercentThreshold) and\n    (isnull(p95QLen) or p95QLen < qlenThreshold) and\n    (recentLocalMessages >= localMessagesSentThreshold or \n    localMessagesSentThreshold == 0 \n    ) and\n    (recentUpstreamMessages >= upstreamMessagesSentThreshold or \n    upstreamMessagesSentThreshold == 0 \n    ),\n    0,\n    2)) \n| extend healthText = case(healthIndicator == 0, \"Healthy\",\n    healthIndicator == 1, \"Unhealthy\",\n    healthIndicator == 2, \"Unhealthy\",\n    \"Unknown\")\n| extend colorHelper = case(lastUpdatedMins > noDataPanicThreshold2Minutes, -2,\n    lastUpdatedMins > noDataPanicThreshold1Minutes, -1,\n    healthIndicator)",
                              "size": 0,
                              "timeContext": {
                                "durationMs": 14400000
                              },
                              "timeContextFromParameter": "timeRange",
                              "exportFieldName": "device",
                              "exportParameterName": "SelectedDeviceDetails",
                              "exportDefaultValue": "default",
                              "queryType": 0,
                              "resourceType": "{resource}",
                              "crossComponentResources": ["{resource}"],
                              "visualization": "graph",
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "device",
                                    "formatter": 7,
                                    "formatOptions": {
                                      "linkTarget": "WorkbookTemplate",
                                      "workbookContext": {
                                        "componentIdSource": "workbook",
                                        "resourceIdsSource": "default",
                                        "templateIdSource": "static",
                                        "templateId": "Community-Workbooks/IoTHub/IoT Edge device details",
                                        "typeSource": "default",
                                        "gallerySource": "default",
                                        "locationSource": "default",
                                        "passSpecificParams": true,
                                        "templateParameters": [
                                          {
                                            "name": "SelectedDevice",
                                            "source": "cell",
                                            "value": ""
                                          },
                                          {
                                            "name": "timeRange",
                                            "source": "parameter",
                                            "value": "timeRange"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "columnMatch": "device_messages_total",
                                    "formatter": 0,
                                    "formatOptions": {
                                      "customColumnWidthSetting": "11.4286ch"
                                    },
                                    "numberFormat": {
                                      "unit": 17,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": false,
                                        "maximumFractionDigits": 1
                                      }
                                    },
                                    "tooltipFormat": {
                                      "tooltip": "Number of messages received by edge hub"
                                    }
                                  },
                                  {
                                    "columnMatch": "device_messages_trend",
                                    "formatter": 10,
                                    "formatOptions": {
                                      "min": 0,
                                      "palette": "turquoise"
                                    }
                                  },
                                  {
                                    "columnMatch": "qlenTrend",
                                    "formatter": 10,
                                    "formatOptions": {
                                      "min": 0,
                                      "max": 100,
                                      "palette": "greenRed",
                                      "compositeBarSettings": {
                                        "labelText": "",
                                        "columnSettings": []
                                      }
                                    }
                                  },
                                  {
                                    "columnMatch": "agoText",
                                    "formatter": 2,
                                    "formatOptions": {
                                      "customColumnWidthSetting": "13.1429ch"
                                    }
                                  },
                                  {
                                    "columnMatch": "cpu_used_percent",
                                    "formatter": 10,
                                    "formatOptions": {
                                      "min": 0,
                                      "max": 100,
                                      "palette": "greenRed",
                                      "compositeBarSettings": {
                                        "labelText": "",
                                        "columnSettings": [
                                          {
                                            "columnName": "cpu_used_percent",
                                            "color": "blue"
                                          }
                                        ]
                                      }
                                    },
                                    "numberFormat": {
                                      "unit": 0,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": false
                                      }
                                    }
                                  },
                                  {
                                    "columnMatch": "mem_used_percent",
                                    "formatter": 10,
                                    "formatOptions": {
                                      "min": 0,
                                      "max": 100,
                                      "palette": "greenRed"
                                    },
                                    "numberFormat": {
                                      "unit": 0,
                                      "options": {
                                        "style": "decimal",
                                        "useGrouping": false,
                                        "maximumFractionDigits": 1
                                      }
                                    }
                                  },
                                  {
                                    "columnMatch": "disk_used_trend",
                                    "formatter": 10,
                                    "formatOptions": {
                                      "min": 0,
                                      "max": 100,
                                      "palette": "greenRed"
                                    }
                                  },
                                  {
                                    "columnMatch": "lastUpdatedSeconds",
                                    "formatter": 5
                                  }
                                ],
                                "rowLimit": 10000,
                                "filter": true,
                                "labelSettings": [
                                  {
                                    "columnId": "agoText",
                                    "label": "Last seen"
                                  },
                                  {
                                    "columnId": "device",
                                    "label": "Device name"
                                  }
                                ]
                              },
                              "sortBy": [],
                              "graphSettings": {
                                "type": 2,
                                "topContent": {
                                  "columnMatch": "healthIndicator",
                                  "formatter": 18,
                                  "formatOptions": {
                                    "thresholdsOptions": "icons",
                                    "thresholdsGrid": [
                                      {
                                        "operator": "==",
                                        "thresholdValue": "0",
                                        "representation": "success",
                                        "text": ""
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "1",
                                        "representation": "unknown",
                                        "text": ""
                                      },
                                      {
                                        "operator": "==",
                                        "thresholdValue": "2",
                                        "representation": "2",
                                        "text": ""
                                      },
                                      {
                                        "operator": "Default",
                                        "thresholdValue": null,
                                        "representation": "success",
                                        "text": "{0}{1}"
                                      }
                                    ],
                                    "compositeBarSettings": {
                                      "labelText": "[[\"device\"]",
                                      "columnSettings": []
                                    }
                                  }
                                },
                                "centerContent": {
                                  "columnMatch": "device",
                                  "formatter": 7,
                                  "formatOptions": {
                                    "linkTarget": "WorkbookTemplate",
                                    "linkIsContextBlade": true,
                                    "workbookContext": {
                                      "componentIdSource": "workbook",
                                      "resourceIdsSource": "default",
                                      "templateIdSource": "static",
                                      "templateId": "Community-Workbooks/IoTHub/IoT Edge health snapshot",
                                      "typeSource": "default",
                                      "gallerySource": "default",
                                      "locationSource": "default",
                                      "passSpecificParams": true,
                                      "templateParameters": [
                                        {
                                          "name": "SelectedDevice",
                                          "source": "column",
                                          "value": "device"
                                        },
                                        {
                                          "name": "timeRange",
                                          "source": "parameter",
                                          "value": "timeRange"
                                        },
                                        {
                                          "name": "SnapshotSelect",
                                          "source": "static",
                                          "value": "'CPU'"
                                        },
                                        {
                                          "name": "hostMemPercentThreshold",
                                          "source": "column",
                                          "value": "hostMemPercentThreshold"
                                        },
                                        {
                                          "name": "hostCpuPercentThreshold",
                                          "source": "column",
                                          "value": "hostCpuPercentThreshold"
                                        },
                                        {
                                          "name": "hostDiskPercentThreshold",
                                          "source": "column",
                                          "value": "hostDiskPercentThreshold"
                                        },
                                        {
                                          "name": "localMessagesSentThreshold",
                                          "source": "column",
                                          "value": "localMessagesSentThreshold"
                                        },
                                        {
                                          "name": "upstreamMessagesSentThreshold",
                                          "source": "column",
                                          "value": "upstreamMessagesSentThreshold"
                                        },
                                        {
                                          "name": "qlenThreshold",
                                          "source": "column",
                                          "value": "qlenThreshold"
                                        },
                                        {
                                          "name": "invokedFromFleetViewWorkbook",
                                          "source": "static",
                                          "value": "yes"
                                        }
                                      ]
                                    },
                                    "compositeBarSettings": {
                                      "labelText": "[[\"device\"]",
                                      "columnSettings": [
                                        {
                                          "columnName": "p95HostCpu",
                                          "color": "blueDark"
                                        }
                                      ]
                                    }
                                  },
                                  "numberFormat": {
                                    "unit": 1,
                                    "options": {
                                      "style": "decimal",
                                      "useGrouping": false
                                    }
                                  }
                                },
                                "bottomContent": {
                                  "columnMatch": "agoText",
                                  "formatter": 1
                                },
                                "hivesContent": {
                                  "columnMatch": "healthText",
                                  "formatter": 1
                                },
                                "nodeIdField": "device",
                                "graphOrientation": 3,
                                "showOrientationToggles": false,
                                "nodeSize": null,
                                "staticNodeSize": 100,
                                "colorSettings": {
                                  "nodeColorField": "colorHelper",
                                  "type": 3,
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "-2",
                                      "representation": "blueDark"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "-1",
                                      "representation": "blue"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "0",
                                      "representation": "green"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "2",
                                      "representation": "orange"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "gray"
                                    }
                                  ]
                                },
                                "groupByField": "healthText",
                                "hivesMargin": 1
                              }
                            },
                            "conditionalVisibility": {
                              "parameterName": "mainAction",
                              "comparison": "isEqualTo",
                              "value": "devicelist"
                            },
                            "showPin": true,
                            "name": "device-health-graph"
                          }
                        ]
                      },
                      "customWidth": "75",
                      "name": "device-health-group"
                    },
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "items": [
                          {
                            "type": 3,
                            "content": {
                              "version": "KqlItem/1.0",
                              "query": "let timeBin = 5m; // set to how often the devices send data\nlet startTime = {timeRange:start};\nlet endTime =  {timeRange:end};\nlet lastUpdateTimeByDevice = InsightsMetrics\n    | where TimeGenerated > startTime\n    | where TimeGenerated < endTime\n    | where Name == \"edgehub_gettwin_total\" or Name == \"edgeAgent_total_time_running_correctly_seconds\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | project TimeGenerated, device\n    | summarize lastUpdateTime=max(TimeGenerated) by device\n    | order by lastUpdateTime;\nlet totalUpstreamMessageCount = InsightsMetrics\n    | where TimeGenerated > startTime and TimeGenerated < endTime\n    | where Name == \"edgehub_messages_sent_total\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | extend target = trim_start(@\"[^/]+/\", extractjson(\"$.to\", tostring(dimensions), typeof(string)))\n    | where target contains \"Upstream\"\n    | extend source = strcat(device, \"::\", trim_start(@\"[^/]+/\", tostring(dimensions.from)))\n    | extend messages = toint(Val)\n    | extend sourceTarget = strcat(source, \"::\", target)\n    | project TimeGenerated, source, sourceTarget, messages, device\n    | order by device, source, sourceTarget, TimeGenerated\n    | serialize\n    | extend nextCount = next(messages, 1)\n    | extend nextSourceTarget= next(sourceTarget, 1)\n    | extend diff = iff((messages - nextCount) >= 0, messages - nextCount, 0)\n    | where sourceTarget == nextSourceTarget and diff >= 0\n    | summarize sumSourceTargetCount=sum(diff) by sourceTarget, device\n    | summarize UpstreamMessages=sum(sumSourceTargetCount) by device;\nlet totalLocalMessageCount = InsightsMetrics\n    | where TimeGenerated > startTime and TimeGenerated < endTime\n    | where Name == \"edgehub_messages_sent_total\"\n    | extend dimensions=parse_json(Tags)\n    | extend device = tostring(dimensions.edge_device)\n    | extend target = trim_start(@\"[^/]+/\", extractjson(\"$.to\", tostring(dimensions), typeof(string)))\n    | where target !contains \"Upstream\"\n    | extend source = strcat(device, \"::\", trim_start(@\"[^/]+/\", tostring(dimensions.from)))\n    | extend messages = toint(Val)\n    | extend sourceTarget = strcat(source, \"::\", target)\n    | project TimeGenerated, source, sourceTarget, messages, device\n    | order by device, source, sourceTarget, TimeGenerated\n    | serialize\n    | extend nextCount = next(messages, 1)\n    | extend nextSourceTarget= next(sourceTarget, 1)\n    | extend diff = iff((messages - nextCount) >= 0, messages - nextCount, 0)\n    | where sourceTarget == nextSourceTarget and diff >= 0\n    | summarize sumSourceTargetCount=sum(diff) by sourceTarget, device\n    | summarize LocalMessages=sum(sumSourceTargetCount) by device;\nlet totalMessageCount = totalLocalMessageCount\n    | join kind=fullouter totalUpstreamMessageCount on device\n    | extend device=device1\n    | project-away device1;\n// Final query\nlastUpdateTimeByDevice\n| join kind=fullouter totalMessageCount on device\n| project-away device1\n| order by lastUpdateTime\n\n\n\n\n",
                              "size": 0,
                              "title": "Active devices ({$rowCount})",
                              "noDataMessage": "No active devices ",
                              "queryType": 0,
                              "resourceType": "{resource}",
                              "crossComponentResources": ["{resource}"],
                              "gridSettings": {
                                "formatters": [
                                  {
                                    "columnMatch": "device",
                                    "formatter": 5,
                                    "formatOptions": {
                                      "workbookContext": {
                                        "componentIdSource": "workbook",
                                        "resourceIdsSource": "workbook",
                                        "templateIdSource": "static",
                                        "templateId": "Community-Workbooks/IoTHub/IoT Edge device details",
                                        "typeSource": "default",
                                        "gallerySource": "default",
                                        "locationSource": "default",
                                        "passSpecificParams": true,
                                        "templateParameters": [
                                          {
                                            "name": "SelectedDevice",
                                            "source": "column",
                                            "value": "device"
                                          },
                                          {
                                            "name": "timeRange",
                                            "source": "parameter",
                                            "value": "timeRange"
                                          }
                                        ]
                                      },
                                      "compositeBarSettings": {
                                        "labelText": "[[\"device\"]",
                                        "columnSettings": [
                                          {
                                            "columnName": "totalUpstreamMessages",
                                            "color": "grayBlue"
                                          },
                                          {
                                            "columnName": "totalLocalMessages",
                                            "color": "brown"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "columnMatch": "lastUpdateTime",
                                    "formatter": 22,
                                    "formatOptions": {
                                      "linkTarget": "WorkbookTemplate",
                                      "workbookContext": {
                                        "componentIdSource": "workbook",
                                        "resourceIdsSource": "default",
                                        "templateIdSource": "static",
                                        "templateId": "Community-Workbooks/IoTHub/IoT Edge device details",
                                        "typeSource": "default",
                                        "gallerySource": "default",
                                        "locationSource": "default",
                                        "passSpecificParams": true,
                                        "templateParameters": [
                                          {
                                            "name": "SelectedDevice",
                                            "source": "column",
                                            "value": "device"
                                          },
                                          {
                                            "name": "timeRange",
                                            "source": "parameter",
                                            "value": "timeRange"
                                          }
                                        ]
                                      },
                                      "compositeBarSettings": {
                                        "labelText": "[[\"device\"]",
                                        "columnSettings": [
                                          {
                                            "columnName": "UpstreamMessages",
                                            "color": "brown"
                                          },
                                          {
                                            "columnName": "LocalMessages",
                                            "color": "turquoise"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "columnMatch": "LocalMessages",
                                    "formatter": 5
                                  },
                                  {
                                    "columnMatch": "UpstreamMessages",
                                    "formatter": 5
                                  }
                                ],
                                "rowLimit": 10000,
                                "filter": true,
                                "sortBy": [
                                  {
                                    "itemKey": "$gen_compositeBar_lastUpdateTime_1",
                                    "sortOrder": 2
                                  }
                                ],
                                "labelSettings": [
                                  {
                                    "columnId": "lastUpdateTime",
                                    "label": "Name"
                                  }
                                ]
                              },
                              "sortBy": [
                                {
                                  "itemKey": "$gen_compositeBar_lastUpdateTime_1",
                                  "sortOrder": 2
                                }
                              ]
                            },
                            "showPin": true,
                            "name": "query - 2"
                          }
                        ]
                      },
                      "customWidth": "25",
                      "name": "device-list-goup"
                    }
                  ],
                  "exportParameters": true
                },
                "conditionalVisibilities": [
                  {
                    "parameterName": "InsightsMetricsExists",
                    "comparison": "isEqualTo",
                    "value": "yes"
                  },
                  {
                    "parameterName": "mainAction",
                    "comparison": "isEqualTo",
                    "value": "devicelist"
                  }
                ],
                "name": "device-group",
                "styleSettings": {
                  "showBorder": true
                }
              },
              {
                "type": 12,
                "content": {
                  "version": "NotebookGroup/1.0",
                  "groupType": "editable",
                  "items": [
                    {
                      "type": 9,
                      "content": {
                        "version": "KqlParameterItem/1.0",
                        "parameters": [
                          {
                            "id": "1f74ed9a-e3ed-498d-bd5b-f68f3836a117",
                            "version": "KqlParameterItem/1.0",
                            "name": "Subscription",
                            "label": "Subscriptions",
                            "type": 6,
                            "isRequired": true,
                            "multiSelect": true,
                            "quote": "'",
                            "delimiter": ",",
                            "typeSettings": {
                              "additionalResourceOptions": ["value::all"],
                              "includeAll": false,
                              "showDefault": false
                            },
                            "defaultValue": "value::all"
                          },
                          {
                            "id": "bd6d6075-dc8f-43d3-829f-7e2245a3eb21",
                            "version": "KqlParameterItem/1.0",
                            "name": "State",
                            "type": 2,
                            "isRequired": true,
                            "multiSelect": true,
                            "quote": "'",
                            "delimiter": ",",
                            "query": "{\"version\":\"1.0.0\",\"content\":\"[ \\r\\n    {\\\"id\\\":\\\"New\\\", \\\"label\\\": \\\"New\\\"},\\r\\n    {\\\"id\\\":\\\"Acknowledged\\\", \\\"label\\\": \\\"Acknowledged\\\"},\\r\\n    {\\\"id\\\":\\\"Closed\\\", \\\"label\\\": \\\"Closed\\\"}\\r\\n]\",\"transformers\":null}",
                            "crossComponentResources": ["{Subscription}"],
                            "value": ["value::all"],
                            "typeSettings": {
                              "additionalResourceOptions": ["value::all"],
                              "selectAllValue": "*",
                              "showDefault": false
                            },
                            "queryType": 8
                          }
                        ],
                        "style": "above",
                        "queryType": 0,
                        "resourceType": "microsoft.insights/components"
                      },
                      "customWidth": "0",
                      "name": "parameters",
                      "styleSettings": {
                        "margin": "10px 0px 0px 10px"
                      }
                    },
                    {
                      "type": 12,
                      "content": {
                        "version": "NotebookGroup/1.0",
                        "groupType": "editable",
                        "items": [
                          {
                            "type": 12,
                            "content": {
                              "version": "NotebookGroup/1.0",
                              "groupType": "editable",
                              "items": [
                                {
                                  "type": 3,
                                  "content": {
                                    "version": "KqlItem/1.0",
                                    "query": "AlertsManagementResources | where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}\r\n| where \"*\" in ({alertResources}) or properties.essentials.targetResource in~ ({alertResources})\r\n| extend State=tostring(properties.essentials.alertState)\r\n| where \"*\" in ({State}) or State in ({State})\r\n| summarize Count=count(), New=countif(State==\"New\"), \r\nAcknowledged=countif(State==\"Acknowledged\"), \r\nClosed=countif(State==\"Closed\") \r\nby Severity=tostring(properties.essentials.severity)\r\n| order by Severity asc",
                                    "size": 3,
                                    "noDataMessage": "No alerts found",
                                    "noDataMessageStyle": 3,
                                    "exportMultipleValues": true,
                                    "exportedParameters": [
                                      {
                                        "fieldName": "Severity",
                                        "parameterName": "Severity",
                                        "parameterType": 1
                                      }
                                    ],
                                    "queryType": 1,
                                    "resourceType": "microsoft.resourcegraph/resources",
                                    "crossComponentResources": [
                                      "{Subscription}"
                                    ],
                                    "visualization": "table"
                                  },
                                  "name": "Alerts summary"
                                }
                              ],
                              "exportParameters": true
                            },
                            "conditionalVisibility": {
                              "parameterName": "Subscription",
                              "comparison": "isNotEqualTo"
                            },
                            "name": "alert-summary-group"
                          },
                          {
                            "type": 12,
                            "content": {
                              "version": "NotebookGroup/1.0",
                              "groupType": "editable",
                              "items": [
                                {
                                  "type": 11,
                                  "content": {
                                    "version": "LinkItem/1.0",
                                    "style": "tabs",
                                    "links": [
                                      {
                                        "id": "b4b81349-14f3-49a1-91df-701be106b46a",
                                        "cellValue": "tab",
                                        "linkTarget": "parameter",
                                        "linkLabel": "Alert Details",
                                        "subTarget": "details",
                                        "preText": "Alert Details",
                                        "style": "link"
                                      },
                                      {
                                        "id": "7e0cfa3e-5858-4016-adf1-3695c714d915",
                                        "cellValue": "tab",
                                        "linkTarget": "parameter",
                                        "linkLabel": "Alerts by Region",
                                        "subTarget": "region",
                                        "style": "link"
                                      }
                                    ]
                                  },
                                  "name": "links - 2"
                                },
                                {
                                  "type": 3,
                                  "content": {
                                    "version": "KqlItem/1.0",
                                    "query": "AlertsManagementResources | where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}  \r\n| extend Severity=tostring(properties.essentials.severity)\r\n| where Severity in ({Severity})\r\n| extend State=tostring(properties.essentials.alertState)\r\n| project AlertId=id, StartTime=todatetime(tostring(properties.essentials.startDateTime)), Severity, State=tostring(properties.essentials.alertState), Name=name, TargetResource = tostring(properties.essentials.targetResource), MonitorService = tostring(properties.essentials.monitorService), SignalType=tostring(properties.essentials.signalType), Description=tostring(properties.essentials.description)\r\n",
                                    "size": 3,
                                    "showExportToExcel": true,
                                    "queryType": 1,
                                    "resourceType": "microsoft.resourcegraph/resources",
                                    "crossComponentResources": [
                                      "{Subscription}"
                                    ],
                                    "visualization": "table",
                                    "gridSettings": {
                                      "formatters": [
                                        {
                                          "columnMatch": "AlertId",
                                          "formatter": 5
                                        },
                                        {
                                          "columnMatch": "StartTime",
                                          "formatter": 6
                                        },
                                        {
                                          "columnMatch": "Severity",
                                          "formatter": 11
                                        },
                                        {
                                          "columnMatch": "Name",
                                          "formatter": 1,
                                          "formatOptions": {
                                            "linkTarget": "OpenBlade",
                                            "bladeOpenContext": {
                                              "bladeName": "AlertDetailsTemplateBlade",
                                              "extensionName": "Microsoft_Azure_Monitoring",
                                              "bladeParameters": [
                                                {
                                                  "name": "alertId",
                                                  "source": "column",
                                                  "value": "AlertId"
                                                },
                                                {
                                                  "name": "alertName",
                                                  "source": "column",
                                                  "value": "Name"
                                                },
                                                {
                                                  "name": "invokedFrom",
                                                  "source": "static",
                                                  "value": "Workbooks"
                                                }
                                              ]
                                            }
                                          },
                                          "tooltipFormat": {
                                            "tooltip": "View alert details"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "conditionalVisibilities": [
                                    {
                                      "parameterName": "Severity",
                                      "comparison": "isNotEqualTo"
                                    },
                                    {
                                      "parameterName": "tab",
                                      "comparison": "isEqualTo",
                                      "value": "details"
                                    }
                                  ],
                                  "name": "Alert details"
                                },
                                {
                                  "type": 3,
                                  "content": {
                                    "version": "KqlItem/1.0",
                                    "query": "AlertsManagementResources | where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}  \r\n| extend State=tostring(properties.essentials.alertState)\r\n| where \"*\" in ({State}) or State in ({State})\r\n| where \"*\" in ({alertResources}) or properties.essentials.targetResource in~ ({alertResources})\r\n| summarize Alerts=count(), New=countif(State==\"New\"), \r\nAcknowledged=countif(State==\"Acknowledged\"), \r\nClosed=countif(State==\"Closed\")\r\nby Resource=tostring(properties.essentials.targetResource )\r\n| order by Alerts desc\r\n",
                                    "size": 3,
                                    "title": "Alerts by Region",
                                    "noDataMessage": "No alerts",
                                    "noDataMessageStyle": 3,
                                    "queryType": 1,
                                    "resourceType": "microsoft.resourcegraph/resources",
                                    "crossComponentResources": [
                                      "{Subscription}"
                                    ],
                                    "visualization": "map",
                                    "mapSettings": {
                                      "locInfo": "AzureResource",
                                      "locInfoColumn": "Resource",
                                      "sizeSettings": "Alerts",
                                      "sizeAggregation": "Sum",
                                      "legendMetric": "Alerts",
                                      "legendAggregation": "Sum",
                                      "itemColorSettings": {
                                        "nodeColorField": "Alerts",
                                        "colorAggregation": "Sum",
                                        "type": "heatmap",
                                        "heatmapPalette": "greenRed"
                                      }
                                    }
                                  },
                                  "conditionalVisibility": {
                                    "parameterName": "tab",
                                    "comparison": "isEqualTo",
                                    "value": "region"
                                  },
                                  "name": "Alerts map"
                                }
                              ]
                            },
                            "conditionalVisibility": {
                              "parameterName": "Severity",
                              "comparison": "isNotEqualTo"
                            },
                            "name": "visible if severity selected"
                          }
                        ]
                      },
                      "conditionalVisibility": {
                        "parameterName": "Subscription",
                        "comparison": "isNotEqualTo"
                      },
                      "name": "visible if subscriptions selected"
                    }
                  ],
                  "exportParameters": true
                },
                "conditionalVisibility": {
                  "parameterName": "mainAction",
                  "comparison": "isEqualTo",
                  "value": "alerts"
                },
                "name": "alerts-group",
                "styleSettings": {
                  "margin": "15px 0px",
                  "showBorder": true
                }
              }
            ]
          },
          "name": "Fleet Overview"
        }
      ],
      "isLocked": false,
      "defaultResourceIds": [
        "[parameters('appInsightsResourceId')]",
        "[parameters('iotHubResourceId')]",
        "[subscription().id]"
      ],
      "fallbackResourceIds": [
        "[parameters('appInsightsResourceId')]",
        "[parameters('iotHubResourceId')]",
        "[subscription().id]"
      ],
      "fromTemplateId": "community-Workbooks/IoTHub/IoT Edge"
    }
  },
  "resources": [
    {
      "name": "[parameters('workbookId')]",
      "type": "microsoft.insights/workbooks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2021-03-08",
      "dependsOn": [],
      "kind": "shared",
      "properties": {
        "displayName": "[parameters('workbookDisplayName')]",
        "serializedData": "[string(variables('workbookContent'))]",
        "version": "1.0",
        "sourceId": "[variables('workbookSourceId')]",
        "category": "[variables('workbookType')]"
      }
    }
  ],
  "outputs": {
    "workbookId": {
      "type": "string",
      "value": "[resourceId( 'microsoft.insights/workbooks', parameters('workbookId'))]"
    }
  }
}
